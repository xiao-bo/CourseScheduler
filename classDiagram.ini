classDiagram
    %% design round2
    %% 全系統共用的參數：上課天數、日期、班級數量
    class GeneralConfig{
        +date date_of_course 
        +int day_of_course
        +int counts_of_class
        +get_data()
        +handle_data()
        +query_data()
        +set_data()
    }

    %% 每班級的班級號碼、
    %% 導師代碼、
    %% 老師代碼＋科目代碼＋配課數量
    %% 課堂時間，一天四節 (第一節,第二節...)
    class Class{
        +int no_of_class
        +int advisor_code
        +dict teacherID_and_subject_code_and_counts
        +int course_time[]
        +get_data()
        +handle_data()
        +query_data()
        +set_data()
    }

    %% 體育班，一天兩節
    class SportClass{
        +int course_time[]

    }

    %% 每班級的最終班表：班級號碼、導師科目、是不是體育班
    class ClassSchedule{
        int no_of_class
        int advisor_code
        int kind_of_class 
        +set_class_schedule(class_scheudle)
        +get_class_schedule():class_schedule
    }

    %% 每個老師的最終師表
    %% 輸入代號即可得到老師師表，若沒輸入就全部回傳
    class TeacherSchedule{
        +set_schedule_of_teacher(teacher_schedule)
        +get_schedule_of_teacher(teacherID) teacher_schedule
    }

    %% 每科的名字、代碼、配課數量、理科、文科
    class SubjectOfCourseCounts{
        str subject 
        int subject_code
        int course_counts
        int science_or_literal
        +get_data()
        +handle_data()
        +query_data()
        +set_data()

    }

    %% 每個老師的名字、ID、科目、配課數、任課班級、是否為導師、導師班級
    %% 老師資料、老師需求、老師請假日
    class Teacher{
        +int teacherID[]
        +string name[]
        +string subject[]
        +string subject_code
        +int course_counts
        +int no_of_class[]
        +int is_advisor
        +int advisor_no_of_class
        +get_requirement_of_teacher()
        +get_leave_date_of_teacher()
        +set_requirement_of_teacher(df)
        +set_leave_date_of_teacher()
        +get_data()
        +handle_data()
        +query_data()
        +set_data()
    }

    %% 老師的排班：哪一天不能排課
    class RequirementsOfTeacher{
        +int teacherID
        +date leave_date
        +int requirement_code
        +get_data()
        +handle_data()
        +query_data()
        +set_data()
    }

    %% 所有老師的需求清單
    %% 將老師特殊需求分類，轉換成ID(這可能要手動轉了)
    class requirement_controller{
        +transfer_leave_date_of_teacher_to_day_can_not_be_arranged(): 2D array
        +transfer_requirement_of_teacher_to_requirement_ID(): requirementID
    }

    %% 歷史地理公民地科不能連堂
    %% 國英數理化最多連二，之間不能有空堂
    %% 一天之中要有文理
    class RequirementsOfClass{
        +one_day_without_two_society_subject
        +one_day_without_gap_CEMP_subject
        +one_day_without_three_CEMP_subject
        +one_day_has_science_and_literal
        +get_data()
        +handle_data()
        +query_data()
        +set_data()
    }

    
    %% 如果有不合的需求，就馬上跳下一個組合
    %% 先從最高需求開始檢查
    %% 排課
    %% 檢查衝堂 
    %% 檢查請假
    %% 檢查班級需求
    class ScheduleBuilder{
        +build_schedule() schedule
        -random_generate_schedule
        -arrange_course()
        -check_arrange(schedule) bool
        -check_requirements_of_teacher(json) bool
        -check_requirements_of_class() bool
        
    }

    %% 一天n堂課＊天數*班級數量
    %% 3D array = courses* days * count_of_classes
    %% 將班級課表轉換成老師課表
    %% 3D array = courses * days * count_of_teachers
    class Scheduler{
        +build_class_schedule() 3D array 
        +transfor_class_schedule_to_teacher_schedule()
        -read_teacher_subject()
        -read_teacher_requirement()
        -read_leave_date_of_teacher()
        -read_class_counts_be_arrange()
        -read_subject_of_course_counts()
        -read_general_config()
        
    }
    class DataController{
        +get_class_data()
        +get_teacher_data()
        +get_subject_of_course_counts()
        +get_requirement_of_teacher()
        +get_general_config()
    }

    class DataSource{
        <<abstract>>
        +Abs get_data()
        +Abs handle_data()
        +Abs query_data()
        +Abs set_data()
    }
    class GoogleSheetIO{
        +read_google_sheet()
        +write_google_sheet(df)
    }


    Teacher "1" *-- "*" RequirementsOfTeacher
    User ..> Scheduler: trigger
    Scheduler ..> ScheduleBuilder:use
    Scheduler <|-- DataController:own
    DataController -->DataSource:use
    Teacher -- GoogleSheet1:implement
    Class -- GoogleSheet1:implement
    SportClass --|> Class: inheritance
    SubjectOfCourseCounts -- GoogleSheet1:implement
    RequirementsOfClass -- GoogleSheet1:implement
    GeneralConfig -- GoogleSheet1: implement
    ScheduleBuilder -- ClassSchedule : create
    ScheduleBuilder -- TeacherSchedule : create

    DataSource<|..Teacher:implement
    DataSource <|..Class:implement
    DataSource <|..SubjectOfCourseCounts:implement
    DataSource <|..RequirementsOfClass:implement
    DataSource <|..GeneralConfig:implement
    ClassSchedule -- csv
    TeacherSchedule -- csv